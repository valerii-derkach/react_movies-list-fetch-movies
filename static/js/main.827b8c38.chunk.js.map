{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","URL","title","a","fetch","response","json","result","Response","Error","FindMovie","addMovie","useState","query","setQuery","setMovie","loading","setLoading","loadingError","setLoadingError","movieExists","setMovieExists","movieFinder","getMovie","then","movieFromserver","catch","error","console","log","onSubmit","event","preventDefault","some","movieInState","htmlFor","type","id","onChange","target","value","placeholder","classnames","onClick","disabled","App","setMovies","currentMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.827b8c38.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\" data-cy=\"card-image\">\n\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movie-title\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => {\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const myKey = 'c9d98407';\nconst URL = `https://www.omdbapi.com/?apikey=${myKey}&t=`;\n\nexport async function getMovie(title: string): Promise<Movie> {\n  const response = await fetch(`${URL}${title}`);\n  const result = await response.json();\n\n  if (result.Response === 'False') {\n    throw new Error('movie does not exist');\n  }\n\n  return result;\n}\n","/* eslint-disable no-console */\nimport React, { FormEvent, useState } from 'react';\nimport classnames from 'classnames';\nimport { getMovie } from '../../api/api';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  addMovie: (movie: Movie) => void,\n  movies: Movie[],\n}\n\nexport const FindMovie: React.FC<Props> = ({ addMovie, movies }) => {\n  const [query, setQuery] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [loadingError, setLoadingError] = useState(false);\n  const [movieExists, setMovieExists] = useState(false);\n\n  const inputHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    setLoadingError(false);\n    setMovieExists(false);\n  };\n\n  const submitHandler = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (movie && !movies\n      .some(movieInState => movieInState.imdbID === movie.imdbID)) {\n      addMovie(movie);\n      setMovie(null);\n    } else {\n      setMovieExists(true);\n    }\n\n    setQuery('');\n  };\n\n  const movieFinder = (title: string) => {\n    setLoading(true);\n\n    getMovie(title)\n      .then(movieFromserver => {\n        setMovie(movieFromserver);\n        setLoading(false);\n      })\n      .catch(error => {\n        console.log('error', error);\n        setLoadingError(true);\n        setLoading(false);\n      });\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={submitHandler}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              onChange={inputHandler}\n              value={query}\n              placeholder=\"Enter a title to search\"\n              className={classnames('input', {\n                'is-danger': loadingError,\n              })}\n            />\n          </div>\n          {loadingError && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n          {movieExists && (\n            <p className=\"help is-danger\">\n              This movie already exists in the MovieList\n            </p>\n          )}\n\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"find\"\n              type=\"button\"\n              className={classnames('button is-light', {\n                'is-loading': loading,\n              })}\n              onClick={() => {\n                movieFinder(query);\n              }}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              data-cy=\"add\"\n              disabled={!movie}\n              type=\"submit\"\n              className=\"button is-primary\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        <h3>{query}</h3>\n        {movie && (\n          <MovieCard movie={movie} />\n        )}\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (movie: Movie) => {\n    setMovies(currentMovies => [...currentMovies, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          addMovie={addMovie}\n          movies={movies}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}